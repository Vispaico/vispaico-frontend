/* src/app/globals.css */
@import 'tailwindcss';

@plugin "@tailwindcss/typography";

/*
  The default border color has changed to `currentcolor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentcolor);
  }
}

/* --- Marquee Gradient Override --- */
/* Replace R, G, B with the actual RGB values of your dark background */
/* e.g., for slate-900 (#0F172A), use 15, 23, 42 */
/* You can define CSS variables for marquee background here if needed:
:root {
  --marquee-bg-r: 15;
  --marquee-bg-g: 23;
  --marquee-bg-b: 42;
}
*/

.rfm-overlay::before,
.rfm-overlay::after {
  background: linear-gradient(to right,
    rgba(var(--marquee-bg-r), var(--marquee-bg-g), var(--marquee-bg-b), 1),
    rgba(var(--marquee-bg-r), var(--marquee-bg-g), var(--marquee-bg-b), 0)
  ) !important; /* <<< ADD !important */
  /* ... other styles ... */
}

.rfm-overlay::after {
  right: 0;
  background: linear-gradient(to left,
    rgba(var(--marquee-bg-r), var(--marquee-bg-g), var(--marquee-bg-b), 1),
    rgba(var(--marquee-bg-r), var(--marquee-bg-g), var(--marquee-bg-b), 0)
  ) !important; /* <<< ADD !important */
  /* ... other styles ... */
}
/* Ensure the ::after pseudo-element fades from right-to-left */
.rfm-overlay::after {
  right: 0; /* Position ::after on the right */
  background: linear-gradient(to left, /* Change direction to left */
    rgba(var(--marquee-bg-r), var(--marquee-bg-g), var(--marquee-bg-b), 1),
    rgba(var(--marquee-bg-r), var(--marquee-bg-g), var(--marquee-bg-b), 0)
  );
}
/* --- End Marquee Override --- */

@keyframes blob {
  0% {
    transform: translate(0px, 0px) scale(1);
  }
  33% {
    transform: translate(30px, -50px) scale(1.1);
  }
  66% {
    transform: translate(-20px, 20px) scale(0.9);
  }
  100% {
    transform: translate(0px, 0px) scale(1);
  }
}

.animate-blob {
  animation: blob 7s infinite;
}

.animation-delay-2000 {
  animation-delay: 2s;
}

.animation-delay-4000 {
  animation-delay: 4s;
}

.faq-link-yellow {
  color: #FACC15 !important; /* Tailwind's yellow-400 */
}